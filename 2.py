#–ù–∞–π—Ç–∏ –Ω–∞–∏–±–æ–ª—å—à–∏–π –æ–±—â–∏–π –¥–µ–ª–∏—Ç–µ–ª—å —Ç—Ä–µ—Ö –∑–∞–¥–∞–Ω–Ω—ã—Ö –Ω–∞—Ç—É—Ä–∞–ª—å–Ω—ã—Ö —á–∏—Å–µ–ª, –∏—Å–ø–æ–ª—å–∑—É—è
#–∞–ª–≥–æ—Ä–∏—Ç–º –ï–≤–∫–ª–∏–¥–∞ –∏ —É—á–∏—Ç—ã–≤–∞—è, —á—Ç–æ –ù–û–î(ùëé, ùëè, ùëê) = –ù–û–î(–ù–û–î(ùëé, ùëè), ùëê).

def gcd(a, b):
    while b:
        a, b = b, a % b
    return a

def gcdofthreenumbers(a, b, c):
    gcd_ab = gcd(a, b)
    gcd_abc = gcd(gcd_ab, c)
    return gcd_abc

a = int(input("–í–≤–µ–¥–∏—Ç–µ –ø–µ—Ä–≤–æ–µ —á–∏—Å–ª–æ: "))
b = int(input("–í–≤–µ–¥–∏—Ç–µ –≤—Ç–æ—Ä–æ–µ —á–∏—Å–ª–æ: "))
c = int(input("–í–≤–µ–¥–∏—Ç–µ —Ç—Ä–µ—Ç—å–µ —á–∏—Å–ª–æ: "))

result = gcdofthreenumbers(a, b, c)
print(f"–ù–∞–∏–±–æ–ª—å—à–∏–π –æ–±—â–∏–π –¥–µ–ª–∏—Ç–µ–ª—å —á–∏—Å–µ–ª {a}, {b} –∏ {c} —Ä–∞–≤–µ–Ω: {result}")

